basePath: /
definitions:
  models.ErrorResponse:
    description: Error response
    properties:
      error:
        example: Detailed error message
        type: string
      message:
        example: Something went wrong
        type: string
      status:
        example: error
        type: string
    type: object
  models.Product:
    description: Product information
    properties:
      created_at:
        type: string
      description:
        example: Laptop Dell Inspiron 15
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Laptop Dell
        type: string
      price:
        example: 15000000
        type: number
      stock:
        example: 10
        type: integer
      updated_at:
        type: string
    type: object
  models.Response:
    description: Successful response
    properties:
      data: {}
      message:
        example: Operation completed successfully
        type: string
      status:
        example: success
        type: string
    type: object
host: localhost:8082
info:
  contact: {}
  description: Product Service API for microservice architecture
  title: Product Service API
  version: "1.0"
paths:
  /products:
    get:
      description: Get list of all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product with the given data
      parameters:
      - description: Product data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new product
      tags:
      - products
  /products/{id}:
    delete:
      description: Delete product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a product
      tags:
      - products
    get:
      description: Get a product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get product by ID
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update product data by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated product data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a product
      tags:
      - products
swagger: "2.0"
